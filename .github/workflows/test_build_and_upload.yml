name: test_build_and_upload

on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        version: ["3.10", "3.11"]
    runs-on: ${{matrix.os}}
    defaults:
      run:
        working-directory: ${{github.workspace}}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.version }} on ${{ matrix.os }}
      uses: actions/setup-python@v4
      with:
       python-version: ${{matrix.version}}        
    - name: Install required Python packages
      run: python -m pip install --upgrade pip build flake8 pytest
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 pyspotstream --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 pyspotstream --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build and install package
      run: python -m pip install .
    - name: Run tests with pytest
      run: pytest tests/


  build:
    name: Build wheel and source distribution
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: python -m pip install --upgrade pip build
      - run: python -m build .
      - uses: actions/upload-artifact@v3
        with:
          path: |
            ./dist/pyspotstream-*.whl
            ./dist/pyspotstream-*.tar.gz

  upload:
    name: Upload wheel and source distribution to PyPI
    needs: [build]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
